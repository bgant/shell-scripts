filter {
  if [type] == "voyager" {
    # Drop EXIT messages with session duration
    if [message] =~ / EXIT: / {
      drop { }
    }  
    grok {
      match => { "message" => "%{DATA:voyager_timestamp}: START: %{DATA:voyager_XXXdb}db_%{DATA:voyager_service} pid=%{INT} from=%{IP:voyager_src_ip}" }
    }
    date {
       match => ["voyager_timestamp", "YY/MM/dd@HH:mm:ss"]
       timezone => "US/Central"
       target => "@timestamp"
    }
    geoip {
      source => "voyager_src_ip"
      target => "geoip"
      database => "/etc/logstash/GeoLiteCity.dat"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float"]
    }
  }
}
